(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{160:function(e,t,o){"use strict";o.r(t),t.default=o.p+"assets/images/account-login-96692d548175b4f39737bab3a1f82b9b.gif"},161:function(e,t,o){"use strict";o.r(t),t.default=o.p+"assets/images/8000-cc6fc50c662c346ef5bf177a0ce17601.gif"},72:function(e,t,o){"use strict";o.r(t),o.d(t,"frontMatter",(function(){return i})),o.d(t,"metadata",(function(){return c})),o.d(t,"rightToc",(function(){return l})),o.d(t,"default",(function(){return p}));var a=o(3),n=o(7),r=(o(0),o(107)),i={type:"blog",slug:"get-started-with-loophole",title:"Get Started with Loophole!",author:"Aman Kalra",author_title:"Loophole Core Team",author_url:"https://github.com/amankalra172",author_image_url:"https://avatars2.githubusercontent.com/u/49478659?v=4",tags:["quickstart","tunnel"]},c={permalink:"/blog/get-started-with-loophole",source:"@site/blog/2020-10-29-get-started-with-loophole.md",description:"Aspire to expose your localhost to the Internet with minimal effort? Do you wish to avoid going through the tedious deployment process? Let me introduce you to Loophole.",date:"2020-10-29T00:00:00.000Z",tags:[{label:"quickstart",permalink:"/blog/tags/quickstart"},{label:"tunnel",permalink:"/blog/tags/tunnel"}],title:"Get Started with Loophole!",readingTime:2.015,truncated:!0,nextItem:{title:"Expose yourself to the world!",permalink:"/blog/expose-yourself-to-the-world"}},l=[],s={rightToc:l};function p(e){var t=e.components,i=Object(n.a)(e,["components"]);return Object(r.b)("wrapper",Object(a.a)({},s,i,{components:t,mdxType:"MDXLayout"}),Object(r.b)("p",null,"Aspire to expose your localhost to the Internet with minimal effort? Do you wish to avoid going through the tedious deployment process? Let me introduce you to Loophole. "),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"So, what's Loophole?")),Object(r.b)("p",null,"In simple words, Loophole allows you to make your Web application public without actually deploying on a cloud service. It provides a user-friendly domain that you can share with your remote users/friends/teammates to try/use your WebApp. "),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Let's give it a try!")),Object(r.b)("p",null,"Firstly, create an account with Loophole . By creating an account, you get access to all the features loophole provides in its beta version. Next, ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"/download"}),"Download the latest version of Loophole here.")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Getting Started")),Object(r.b)("p",null,"In windows, click the loophole.zip file to unzip. "),Object(r.b)("p",null,"For Mac and Linux, use terminal with the following command:"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"$ unzip /path/to/loophole.zip\n")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Authenticating Loophole CLI for all feature access")),Object(r.b)("p",null,"Once you've signed up, you need to configure loophole with the authtoken.with authtoken, you get access to account-only features. Loophole has a simple 'account' command to make this easy. Under the hood, the login command adds (or modify) the authtoken property in your loophole configuration file. "),Object(r.b)("p",null,Object(r.b)("img",{alt:"Authentication",src:o(160).default})),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Running our local server project")),Object(r.b)("p",null,"Meanwhile, we need to have a webapp running. Here we consider a simple gatsby server for representation purposes."),Object(r.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(r.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-heading"}),Object(r.b)("h5",{parentName:"div"},Object(r.b)("span",Object(a.a)({parentName:"h5"},{className:"admonition-icon"}),Object(r.b)("svg",Object(a.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(r.b)("path",Object(a.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})))),"Note")),Object(r.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-content"}),Object(r.b)("p",{parentName:"div"},"The webapp is running on port 8000"))),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-javascript"}),"const os = require('os');\nconst express = require('express');\n\nconst port = process.env.PORT || 8000;\nconst app = express();\n\napp.get('/*', function (req, res) {\n  const hostname = os.hostname();\n  res.json({hostname, version: '2'});\n});\n\napp.listen(port, () => {\n  console.log(`demo-app listening on port ${port}`);\n});\n")),Object(r.b)("p",null,"Now all we have to do is let Loophole know the port our local server is running on! After authentication,follow the below instructions:"),Object(r.b)("p",null,Object(r.b)("img",{alt:"Tunnel",src:o(161).default})),Object(r.b)("div",{className:"admonition admonition-tip alert alert--success"},Object(r.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-heading"}),Object(r.b)("h5",{parentName:"div"},Object(r.b)("span",Object(a.a)({parentName:"h5"},{className:"admonition-icon"}),Object(r.b)("svg",Object(a.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"}),Object(r.b)("path",Object(a.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"})))),"Tip")),Object(r.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-content"}),Object(r.b)("p",{parentName:"div"},"If your app is running on a different port, just replace 8000 with your respective port."))),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Example")," - For an app running on port 3000, the command will be "),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"$ loophole http 3000\n\n# or for 1.0.0-beta.8 and older\n$ loophole 3000\n")),Object(r.b)("p",null,"and it fires a HTTPS secured tunnel for you."),Object(r.b)("p",null,"Your website is now ",Object(r.b)("strong",{parentName:"p"},"LIVE"),"!"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Share the URL with people you want to show your web application. It is that simple")),Object(r.b)("p",null,"There are endless possibilities with Loophole. You can create a custom domain, or share a QR code than a URL. I would cover those features individually in other blog posts. For more details, you can refer to the ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"/docs"}),"documentation")," here. "))}p.isMDXComponent=!0}}]);